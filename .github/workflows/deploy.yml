name: Deploy

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # PHP deps (prod only)
      - uses: shivammathur/setup-php@v2
        with: { php-version: '8.2' }
      - run: composer install --no-dev --optimize-autoloader --prefer-dist

      # Node build (Bootstrap assets)
      - uses: actions/setup-node@v4
        with: { node-version: '18', cache: 'npm' }
      - run: npm ci
      - run: npm run build

      # Pack deploy bundle (no tests, no node_modules)
      - name: Create artifact
        run: |
          tar -czf deploy.tgz \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='tests' \
            --exclude='.github' \
            --exclude='.env' \
            .

      - uses: actions/upload-artifact@v4
        with:
          name: deploy
          path: deploy.tgz

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with: { name: deploy, path: . }

      # Upload bundle
      - name: Copy to server (scp)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "deploy.tgz"
          target: "${{ secrets.DEPLOY_PATH }}"

      # Unpack + swap release + optimize
      - name: Deploy steps (ssh)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            cd "${{ secrets.DEPLOY_PATH }}"
            mkdir -p releases shared/storage
            ts=$(date +%Y%m%d%H%M%S)
            mkdir "releases/$ts"
            tar -xzf deploy.tgz -C "releases/$ts"
            # persistent storage
            rm -rf "releases/$ts/storage"
            ln -sfn "${{ secrets.DEPLOY_PATH }}/shared/storage" "releases/$ts/storage"
            # env file (must already exist in shared/.env)
            ln -sfn "${{ secrets.DEPLOY_PATH }}/shared/.env" "releases/$ts/.env"
            # point current -> new
            ln -sfn "releases/$ts" current
            # webroot should serve current/public
            ln -sfn "${{ secrets.DEPLOY_PATH }}/current/public" "${{ secrets.WEBROOT_PATH }}"

            cd current
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear
            php artisan migrate --force || true
            php artisan optimize

